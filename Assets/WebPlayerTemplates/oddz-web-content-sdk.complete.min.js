(function () {
    var a, b, c, d, e, f, g = function (a, b) {
            return function () {
                return a.apply(b, arguments)
            }
        };
    a = function () {
        function a(a) {
            null == a && (a = {}), null != a.discoveryUrl && (this.discoveryUrl = a.discoveryUrl), null != a.debug && (this.debug = a.debug), this.apiKeyName = null != a.apiKeyName ? a.apiKeyName : "api_key", null != a.apiKey && (this.api_key = a.apiKey), null != a.api_key && (this.api_key = a.api_key), null != a.verbose && (this.verbose = a.verbose), this.supportHeaderParams = null != a.supportHeaderParams ? a.supportHeaderParams : !1, this.supportedSubmitMethods = null != a.supportedSubmitMethods ? a.supportedSubmitMethods : ["get"], null != a.success && (this.success = a.success), this.failure = null != a.failure ? a.failure : function () {}, this.progress = null != a.progress ? a.progress : function () {}, this.headers = null != a.headers ? a.headers : {}, this.booleanValues = null != a.booleanValues ? a.booleanValues : new Array("true", "false"), this.discoveryUrl = this.suffixApiKey(this.discoveryUrl), null != a.success && this.build()
        }
        return a.prototype.discoveryUrl = "http://api.wordnik.com/v4/resources.json", a.prototype.debug = !1, a.prototype.api_key = null, a.prototype.basePath = null, a.prototype.build = function () {
            var a = this;
            return this.progress("fetching resource list: " + this.discoveryUrl), jQuery.getJSON(this.discoveryUrl, function (b) {
                var c, d, e, g, h, i, j, k;
                if (null != b.apiVersion && (a.apiVersion = b.apiVersion), null != b.basePath && jQuery.trim(b.basePath).length > 0 ? (a.basePath = b.basePath, null == a.basePath.match(/^HTTP/i) && a.fail("discoveryUrl basePath must be a URL."), a.basePath = a.basePath.replace(/\/$/, "")) : (a.basePath = a.discoveryUrl.substring(0, a.discoveryUrl.lastIndexOf("/")), log("derived basepath from discoveryUrl as " + a.basePath)), a.apis = {}, a.apisArray = [], null != b.resourcePath) {
                    for (a.resourcePath = b.resourcePath, c = null, j = b.apis, e = 0, h = j.length; h > e; e++) d = j[e], null === c ? c = new f(d, a) : c.addOperations(d.path, d.operations);
                    null != c && (a.apis[c.name] = c, a.apisArray.push(c), c.ready = !0, a.selfReflect())
                } else
                    for (k = b.apis, g = 0, i = k.length; i > g; g++) d = k[g], c = new f(d, a), a.apis[c.name] = c, a.apisArray.push(c);
                return a
            }).error(function (b) {
                return a.fail("http" !== a.discoveryUrl.substring(0, 4) ? "Please specify the protocol for " + a.discoveryUrl : 0 === b.status ? "Can't read from server.  It may not have the appropriate access-control-origin settings." : 404 === b.status ? "Can't read swagger JSON from " + a.discoveryUrl : b.status + " : " + b.statusText + " " + a.discoveryUrl)
            })
        }, a.prototype.selfReflect = function () {
            var a, b, c;
            if (null == this.apis) return !1;
            c = this.apis;
            for (b in c)
                if (a = c[b], null == a.ready) return !1;
            return this.setConsolidatedModels(), this.ready = !0, null != this.success ? this.success() : void 0
        }, a.prototype.fail = function (a) {
            throw this.failure(a), a
        }, a.prototype.setConsolidatedModels = function () {
            var a, b, c, d, e, f, g, h, i;
            this.modelsArray = [], this.models = {}, g = this.apis;
            for (d in g) {
                c = g[d];
                for (b in c.models) null == this.models[b] && (this.models[b] = c.models[b], this.modelsArray.push(c.models[b]))
            }
            for (h = this.modelsArray, i = [], e = 0, f = h.length; f > e; e++) a = h[e], i.push(a.setReferencedModels(this.models));
            return i
        }, a.prototype.suffixApiKey = function (a) {
            var b;
            return null != this.api_key && jQuery.trim(this.api_key).length > 0 && null != a ? (b = a.indexOf("?") > 0 ? "&" : "?", a + b + this.apiKeyName + "=" + this.api_key) : a
        }, a.prototype.help = function () {
            var a, b, c, d, e, f, g, h, i, j;
            h = this.apis;
            for (e in h) {
                d = h[e], console.log(e), i = d.operations;
                for (b in i)
                    for (a = i[b], console.log("  " + a.nickname), j = a.parameters, f = 0, g = j.length; g > f; f++) c = j[f], console.log("    " + c.name + (c.required ? " (required)" : "") + " - " + c.description)
            }
            return this
        }, a
    }(), f = function () {
        function a(a, b) {
            var c, d = this;
            this.api = b, this.path = null != this.api.resourcePath ? this.api.resourcePath : a.path, this.description = a.description, c = this.path.split("/"), this.name = c[c.length - 1].replace(".{format}", ""), this.basePath = this.api.basePath, this.operations = {}, this.operationsArray = [], this.modelsArray = [], this.models = {}, null != a.operations && null != this.api.resourcePath ? (this.api.progress("reading resource " + this.name + " models and operations"), this.addModels(a.models), this.addOperations(a.path, a.operations), this.api[this.name] = this) : (null == this.path && this.api.fail("SwaggerResources must have a path."), this.url = this.api.suffixApiKey(this.api.basePath + this.path.replace("{format}", "json")), this.api.progress("fetching resource " + this.name + ": " + this.url), jQuery.getJSON(this.url, function (a) {
                var b, c, e, f;
                if (null != a.basePath && jQuery.trim(a.basePath).length > 0 && (d.basePath = a.basePath, d.basePath = d.basePath.replace(/\/$/, "")), d.addModels(a.models), a.apis)
                    for (f = a.apis, c = 0, e = f.length; e > c; c++) b = f[c], d.addOperations(b.path, b.operations);
                return d.api[d.name] = d, d.ready = !0, d.api.selfReflect()
            }).error(function (a) {
                return d.api.fail("Unable to read api '" + d.name + "' from path " + d.url + " (server returned " + a.statusText + ")")
            }))
        }
        return a.prototype.addModels = function (a) {
            var c, d, e, f, g, h, i;
            if (null != a) {
                for (d in a) null == this.models[d] && (e = new b(d, a[d]), this.modelsArray.push(e), this.models[d] = e);
                for (h = this.modelsArray, i = [], f = 0, g = h.length; g > f; f++) c = h[f], i.push(c.setReferencedModels(this.models));
                return i
            }
        }, a.prototype.addOperations = function (a, b) {
            var c, e, f, g, h, i;
            if (b) {
                for (i = [], g = 0, h = b.length; h > g; g++) e = b[g], c = e.consumes, e.supportedContentTypes && (c = e.supportedContentTypes), f = new d(e.nickname, a, e.httpMethod, e.parameters, e.summary, e.notes, e.responseClass, e.errorResponses, this, e.consumes, e.produces), this.operations[f.nickname] = f, i.push(this.operationsArray.push(f));
                return i
            }
        }, a.prototype.help = function () {
            var a, b, c, d, e, f, g;
            f = this.operations;
            for (b in f)
                for (a = f[b], console.log("  " + a.nickname), g = a.parameters, d = 0, e = g.length; e > d; d++) c = g[d], console.log("    " + c.name + (c.required ? " (required)" : "") + " - " + c.description);
            return this
        }, a
    }(), b = function () {
        function a(a, b) {
            var d;
            this.name = null != b.id ? b.id : a, this.properties = [];
            for (d in b.properties) this.properties.push(new c(d, b.properties[d]))
        }
        return a.prototype.setReferencedModels = function (a) {
            var b, c, d, e, f;
            for (e = this.properties, f = [], c = 0, d = e.length; d > c; c++) b = e[c], f.push(null != a[b.dataType] ? b.refModel = a[b.dataType] : null != b.refDataType && null != a[b.refDataType] ? b.refModel = a[b.refDataType] : void 0);
            return f
        }, a.prototype.getMockSignature = function (a, b) {
            var c, d, e, f, g, h, i, j, k, l, m, n, o, p;
            for (f = [], o = this.properties, k = 0, m = o.length; m > k; k++) e = o[k], f.push(e.toString());
            for (h = '<span style="font-weight: bold; color: #000; font-size: 1.0em">', j = '<span style="font-weight: bold; color: #000; font-size: 1.1em">', i = "</span>", d = h + "class " + this.name + "(" + i, c = h + ")" + i, g = d + "<span>" + f.join("</span>, <span>") + "</span>" + c, null != a && (g = j + a + i + "<br/>" + g), p = this.properties, l = 0, n = p.length; n > l; l++) e = p[l], null != e.refModel && e.refModel !== b && (g += "<br>" + e.refModel.getMockSignature(void 0, this));
            return g
        }, a.prototype.createJSONSample = function (a) {
            var b, c, d, e, f;
            for (c = {}, f = this.properties, d = 0, e = f.length; e > d; d++) b = f[d], c[b.name] = b.getSampleValue(a);
            return c
        }, a
    }(), c = function () {
        function a(a, b) {
            this.name = a, this.dataType = b.type, this.isArray = "array" === this.dataType.toLowerCase(), this.descr = b.description, null != b.items && (null != b.items.type && (this.refDataType = b.items.type), null != b.items.$ref && (this.refDataType = b.items.$ref)), this.dataTypeWithRef = null != this.refDataType ? this.dataType + "[" + this.refDataType + "]" : this.dataType, null != b.allowableValues && (this.valueType = b.allowableValues.valueType, this.values = b.allowableValues.values, null != this.values && (this.valuesString = "'" + this.values.join("' or '") + "'"))
        }
        return a.prototype.getSampleValue = function (a) {
            var b;
            return b = null != this.refModel && this.refModel !== a ? this.refModel.createJSONSample(this.refModel) : this.isArray ? this.refDataType : this.dataType, this.isArray ? [b] : b
        }, a.prototype.toString = function () {
            var a;
            return a = this.name + ": " + this.dataTypeWithRef, null != this.values && (a += " = ['" + this.values.join("' or '") + "']"), null != this.descr && (a += " {" + this.descr + "}"), a
        }, a
    }(), d = function () {
        function a(a, b, c, d, e, f, h, i, j, k, l) {
            var m, n, o, p, q, r, s, t, u, v = this;
            for (this.nickname = a, this.path = b, this.httpMethod = c, this.parameters = null != d ? d : [], this.summary = e, this.notes = f, this.responseClass = h, this.errorResponses = i, this.resource = j, this.consumes = k, this.produces = l, this["do"] = g(this["do"], this), null == this.nickname && this.resource.api.fail("SwaggerOperations must have a nickname."), null == this.path && this.resource.api.fail("SwaggerOperation " + a + " is missing path."), null == this.httpMethod && this.resource.api.fail("SwaggerOperation " + a + " is missing httpMethod."), this.path = this.path.replace("{format}", "json"), this.httpMethod = this.httpMethod.toLowerCase(), this.isGetMethod = "get" === this.httpMethod, this.resourceName = this.resource.name, "void" === (null != (s = this.responseClass) ? s.toLowerCase() : void 0) && (this.responseClass = void 0), null != this.responseClass && (this.responseClassSignature = this.getSignature(this.responseClass, this.resource.models), this.responseSampleJSON = this.getSampleJSON(this.responseClass, this.resource.models)), this.errorResponses = this.errorResponses || [], t = this.parameters, o = 0, q = t.length; q > o; o++)
                if (m = t[o], m.name = m.name || m.dataType, "boolean" === m.dataType.toLowerCase() && (m.allowableValues = {}, m.allowableValues.values = this.resource.api.booleanValues), m.signature = this.getSignature(m.dataType, this.resource.models), m.sampleJSON = this.getSampleJSON(m.dataType, this.resource.models), null != m.allowableValues && ("RANGE" === m.allowableValues.valueType ? m.isRange = !0 : m.isList = !0, null != m.allowableValues.values))
                    for (m.allowableValues.descriptiveValues = [], u = m.allowableValues.values, p = 0, r = u.length; r > p; p++) n = u[p], m.allowableValues.descriptiveValues.push(null != m.defaultValue && m.defaultValue === n ? {
                        value: n,
                        isDefault: !0
                    } : {
                        value: n,
                        isDefault: !1
                    });
            this.resource[this.nickname] = function (a, b, c) {
                return v["do"](a, b, c)
            }
        }
        return a.prototype.isListType = function (a) {
            return a.indexOf("[") >= 0 ? a.substring(a.indexOf("[") + 1, a.indexOf("]")) : void 0
        }, a.prototype.getSignature = function (a, b) {
            var c, d;
            return d = this.isListType(a), c = null != d && b[d] || null != b[a] ? !1 : !0, c ? a : null != d ? b[d].getMockSignature(a) : b[a].getMockSignature(a)
        }, a.prototype.getSampleJSON = function (a, b) {
            var c, d, e;
            return d = this.isListType(a), c = null != d && b[d] || null != b[a] ? !1 : !0, e = c ? void 0 : null != d ? b[d].createJSONSample() : b[a].createJSONSample(), e ? (e = d ? [e] : e, JSON.stringify(e, null, 2)) : void 0
        }, a.prototype["do"] = function (a, b, c) {
            var d, f;
            return null == a && (a = {}), "function" == typeof a && (c = b, b = a, a = {}), null == c && (c = function (a, b, c) {
                return console.log(a, b, c)
            }), null == b && (b = function (a) {
                return console.log(a)
            }), null != a.headers && (f = a.headers, delete a.headers), null != a.body && (d = a.body, delete a.body), new e(this.httpMethod, this.urlify(a), f, d, b, c, this)
        }, a.prototype.pathJson = function () {
            return this.path.replace("{format}", "json")
        }, a.prototype.pathXml = function () {
            return this.path.replace("{format}", "xml")
        }, a.prototype.urlify = function (a, b) {
            var c, d, e, f, g, h, i;
            for (null == b && (b = !0), f = this.resource.basePath + this.pathJson(), i = this.parameters, g = 0, h = i.length; h > g; g++)
                if (c = i[g], "path" === c.paramType) {
                    if (!a[c.name]) throw "" + c.name + " is a required path param.";
                    e = new RegExp("{" + c.name + "[^}]*}", "gi"), f = f.replace(e, encodeURIComponent(a[c.name])), delete a[c.name]
                }
            return b && null != this.resource.api.api_key && this.resource.api.api_key.length > 0 && (a[this.apiKeyName] = this.resource.api.api_key), d = jQuery.param(this.supportHeaderParams() ? this.getQueryParams(a, b) : this.getQueryAndHeaderParams(a, b)), null != d && d.length > 0 && (f += "?" + d), f
        }, a.prototype.supportHeaderParams = function () {
            return this.resource.api.supportHeaderParams
        }, a.prototype.supportedSubmitMethods = function () {
            return this.resource.api.supportedSubmitMethods
        }, a.prototype.getQueryAndHeaderParams = function (a, b) {
            return null == b && (b = !0), this.getMatchingParams(["query", "header"], a, b)
        }, a.prototype.getQueryParams = function (a, b) {
            return null == b && (b = !0), this.getMatchingParams(["query"], a, b)
        }, a.prototype.getHeaderParams = function (a, b) {
            return null == b && (b = !0), this.getMatchingParams(["header"], a, b)
        }, a.prototype.getMatchingParams = function (a, b, c) {
            var d, e, f, g, h, i, j, k;
            for (d = {}, j = this.parameters, h = 0, i = j.length; i > h; h++) f = j[h], jQuery.inArray(f.paramType, a) >= 0 && b[f.name] && (d[f.name] = b[f.name]);
            if (c && null != this.resource.api.api_key && this.resource.api.api_key.length > 0 && (d[this.resource.api.apiKeyName] = this.resource.api.api_key), jQuery.inArray("header", a) >= 0) {
                k = this.resource.api.headers;
                for (e in k) g = k[e], d[e] = g
            }
            return d
        }, a.prototype.help = function () {
            var a, b, c, d;
            for (d = this.parameters, b = 0, c = d.length; c > b; b++) a = d[b], console.log("    " + a.name + (a.required ? " (required)" : "") + " - " + a.description);
            return this
        }, a
    }(), e = function () {
        function a(a, b, c, d, e, f, g) {
            var h, i = this;
            if (this.type = a, this.url = b, this.headers = c, this.body = d, this.successCallback = e, this.errorCallback = f, this.operation = g, null == this.type) throw "SwaggerRequest type is required (get/post/put/delete).";
            if (null == this.url) throw "SwaggerRequest url is required.";
            if (null == this.successCallback) throw "SwaggerRequest successCallback is required.";
            if (null == this.errorCallback) throw "SwaggerRequest error callback is required.";
            if (null == this.operation) throw "SwaggerRequest operation is required.";
            this.operation.resource.api.verbose && console.log(this.asCurl()), this.headers || (this.headers = {}), null != this.operation.resource.api.api_key && (this.headers[this.apiKeyName] = this.operation.resource.api.api_key), null == this.headers.mock && (h = {
                type: this.type,
                url: this.url,
                data: JSON.stringify(this.body),
                dataType: "json",
                error: function (a, b, c) {
                    return i.errorCallback(a, b, c)
                },
                success: function (a) {
                    return i.successCallback(a)
                }
            }, ("post" === h.type.toLowerCase() || "put" === h.type.toLowerCase()) && (h.contentType = "application/json"), jQuery.ajax(h))
        }
        return a.prototype.asCurl = function () {
            var a, b, c;
            return a = function () {
                var a, d;
                a = this.headers, d = [];
                for (b in a) c = a[b], d.push('--header "' + b + ": " + c + '"');
                return d
            }.call(this), "curl " + a.join(" ") + " " + this.url
        }, a
    }(), window.SwaggerApi = a, window.SwaggerResource = f, window.SwaggerOperation = d, window.SwaggerRequest = e
}).call(this),
function () {
    ! function (a) {
        return "function" == typeof define && define.amd ? define(["jquery"], a) : a(jQuery)
    }(function (a) {
        var b, c, d, e, f, g, h;
        return d = function (a) {
            return b.raw ? a : encodeURIComponent(a)
        }, c = function (a) {
            return b.raw ? a : decodeURIComponent(a)
        }, h = function (a) {
            return d(b.json ? JSON.stringify(a) : String(a))
        }, e = function (a) {
            0 === a.indexOf('"') && (a = a.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, "\\"));
            try {
                return a = decodeURIComponent(a.replace(f, " ")), b.json ? JSON.parse(a) : a
            } catch (c) {}
        }, g = function (c, d) {
            var f;
            return f = b.raw ? c : e(c), a.isFunction(d) ? d(f) : f
        }, f = /\+/g, b = a.cookie = function (e, f, i) {
            var j, k, l, m, n, o, p, q, r;
            if (void 0 !== f && !a.isFunction(f)) return i = a.extend({}, b.defaults, i), "number" == typeof i.expires && (l = i.expires, r = i.expires = new Date, r.setTime(+r + 864e5 * l)), document.cookie = [d(e), "=", h(f), i.expires ? "; expires=" + i.expires.toUTCString() : "", i.path ? "; path=" + i.path : "", i.domain ? "; domain=" + i.domain : "", i.secure ? "; secure" : ""].join("");
            for (q = e ? void 0 : {}, k = document.cookie ? document.cookie.split("; ") : [], m = 0, n = k.length; n > m;) {
                if (p = k[m].split("="), o = c(p.shift()), j = p.join("="), e && e === o) {
                    q = g(j, f);
                    break
                }
                e || void 0 === (j = g(j)) || (q[o] = j), m++
            }
            return q
        }, b.defaults = {}, a.removeCookie = function (b, c) {
            return void 0 === a.cookie(b) ? !1 : (a.cookie(b, "", a.extend({}, c, {
                expires: -1
            })), !a.cookie(b))
        }
    })
}.call(this),
function () {
    var a, b, c, d, e = function (a, b) {
            return function () {
                return a.apply(b, arguments)
            }
        };
    d = "undefined" != typeof exports && null !== exports ? exports : this, c = function (a) {
        var b, c, d, e, f;
        if ("" === a) return {};
        for (d = {}, e = 0, f = a.length; f > e; e++) b = a[e], c = b.split("="), 2 === c.length && (d[c[0]] = decodeURIComponent(c[1].replace(/\+/g, " ")));
        return d
    }(window.location.search.substr(1).split("&")), b = function () {
        return window.location.href.substring(0, window.location.href.indexOf(window.location.search))
    }, a = function () {
        function a(a, b, c, d) {
            var f = this;
            this.apiKey = a, this.sessionSuccessCallback = b, this.sessionFailureCallback = c, this.igwfFlowCompletionCallback = d, this.initApiSession = e(this.initApiSession, this), this.evalQuerystring = e(this.evalQuerystring, this), this.api = new SwaggerApi({
                apiKey: this.apiKey,
                discoveryUrl: "http://sb.oddz.com/api/v1.1/api-docs/resources.json",
                verbose: !0,
                async: !1,
                success: function () {
                    return console.log("api " + f.api)
                }
            }), this.evalQuerystring()
        }
        var d;
        return d = 5, a.prototype.evalQuerystring = function () {
            var a, d, e, f;
            if (c.ticket && !c.igwf_flow) {
                if (this.initApiSession(), $.cookie("igwf_flow")) return f = $.cookie("igwf_flow").split("|"), a = f[0], e = f[1], this.cookieHasNotExpired(e) && this.igwfFlowCompletionCallback(a), $.removeCookie("igwf_flow")
            } else if (c.ticket && c.igwf_flow) return $.cookie("igwf_flow", "" + c.igwf_flow + "|" + new Date), d = b(), window.location = "http://sb.oddz.com/cas/login?service=" + d
        }, a.prototype.cookieHasNotExpired = function (a) {
            return Math.floor((new Date - new Date(a)) / 1e3 / 60) <= d
        }, a.prototype.initApiSession = function () {
            var a = this;
            return this.api = new SwaggerApi({
                apiKey: this.apiKey,
                discoveryUrl: "http://sb.oddz.com/api/v1.1/api-docs/resources.json",
                verbose: !0,
                async: !1,
                success: function () {
                    return a.api.ready === !0 ? a.api.Oddz.session({
                        apiKey: a.apiKey,
                        accessToken: c.ticket
                    }, a.sessionSuccessCallback, function (b) {
                        return a.sessionFailureCallback({
                            status: b.status,
                            responseText: b.responseText
                        })
                    }) : void 0
                }
            })
        }, a
    }(), d.OddzWebContent = a
}.call(this);